name: Release Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release


jobs:
  build:
    strategy :
      matrix :
        os : [ windows-latest, ubuntu-latest]
        include :
          - os : windows-latest
            artifact_path : "${{vars.SF_PLUGIN_NAME}}.vst3/Contents/x86_64-win"
            file : ${{vars.SF_PLUGIN_NAME}}.vst3
            artifact_name : win64
          # macos is seg faulting when running juce_vst3_helper
          #- os : macos-latest
          #  artifact_path : "${{vars.SF_PLUGIN_NAME}}.vst3/Contents/MacOS"
          #  file : ${{vars.SF_PLUGIN_NAME}}
          #  artifact_name : macos
          - os : ubuntu-latest
            artifact_path : "."
            file : ${{vars.SF_PLUGIN_NAME}}.vst3
            artifact_name : linux
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure ubuntu
      if : matrix.os == 'ubuntu-latest'
      run : sudo apt install xorg-dev libasound2-dev libgl1-mesa-dev  libcurl4-openssl-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -v

    - name: Get Config Info
      working-directory: ${{github.workspace}}/build
      shell : bash
      run : |
        ../scripts/project_vars > CONFIG.sh
        cat CONFIG.sh
        cat CONFIG.sh >> $GITHUB_ENV
        cat CONFIG.sh >> $GITHUB_OUTPUT

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Compress plugin not-win
      if : matrix.os != 'windows-latest'
      working-directory: ${{github.workspace}}/build
      run : |
        cd Source/${SF_PROJECT}_artefacts/Release/VST3/${{matrix.artifact_path}}
        ZIPNAME="${SF_PROJECT}-${SF_VERSION}-${{matrix.artifact_name}}-vst3.zip"
        zip -9 -r ${{github.workspace}}/build/${ZIPNAME} ${{matrix.file}}

    - name: Compress plugin win
      if : matrix.os == 'windows-latest'
      working-directory: ${{github.workspace}}/build
      run : |
        cd Source/${env:SF_PROJECT}_artefacts/Release/VST3/${{matrix.artifact_path}}
        $ZIPNAME="${env:SF_PROJECT}-${env:SF_VERSION}-${{matrix.artifact_name}}-vst3.zip"
        Compress-Archive -Path ${{matrix.file}} -CompressionLevel Optimal -Destination ${{github.workspace}}/build/${ZIPNAME}     

    - name: Upload plugin
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.SF_PROJECT}}-${{env.SF_VERSION}}-${{matrix.artifact_name}}-vst3.zip
        path: ${{github.workspace}}/build/${{env.SF_PROJECT}}-${{env.SF_VERSION}}-${{matrix.artifact_name}}-vst3.zip

    - name: Build .deb
      if : matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/build
      run : bash -x ../packaging/create-deb
